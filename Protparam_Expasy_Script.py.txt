# -*- coding: utf-8 -*-
"""Hydrophob & IsoEP.ipynb
Automatically generated by Colaboratory.
"""

pip install biopython

import pandas as pd
from Bio.SeqUtils import ProtParam

# Define the function to calculate GRAVY
def calc_gravy(seq):
    #Calculate the GRAVY (Grand average of hydropathicity) value for a given protein sequence.
    kd = 'ACDEFGHIKLMNPQRSTVWY'
    seq = ''.join(aa for aa in seq if aa in kd)
    seq = seq.replace('\n', '')  # Remove any newline characters
    pp = ProtParam.ProteinAnalysis(seq)
    return pp.gravy()

# Define the function to calculate isoelectric point
def isoelectric_point(seq):
    pp = ProtParam.ProteinAnalysis(str(seq))
    isoelectric_point = pp.isoelectric_point()
    return isoelectric_point

# Define the function to calculate extinction coefficient 
def extinction_coefficients(seq):
    pp = ProtParam.ProteinAnalysis(str(seq))
    extinction_coefficients = pp.molar_extinction_coefficient()
    extinction_coefficients_no_cys = extinction_coefficients[0] # with reduced cysteines
    extinction_coefficients_cys = extinction_coefficients[1] # with disulfid bridges
    return extinction_coefficients_no_cys, extinction_coefficients_cys

# Define the function to calculate instability index (< 40 protein stable) 
def instability_index(seq):
    seq = seq.replace(' ', '')
    seq = seq.replace('\n', '') 
    if 'X' in seq:
        return 0
    else:
        pp = ProtParam.ProteinAnalysis(str(seq))
        instability_index = pp.instability_index()
        return instability_index


# Read the input Excel file
df = pd.read_excel('protparam_input_data.xlsx')

# Apply the functions to the sequence column and store the results in new columns
df['GRAVY'] = df['Sequence'].apply(calc_gravy)
df['Isoelectric point'] = df['Sequence'].apply(isoelectric_point)
df['Instability Index'] = df['Sequence'].apply(instability_index)


# Create the columns for Extinction coefficients (reduced cys) and Extinction coefficients (cys)
df['Extinction coefficients (reduced cys)'] = None
df['Extinction coefficients (cys)'] = None

# Loop through the rows of the dataframe and compute the extinction coefficients for each sequence
for index, row in df.iterrows():
    cys_extinction_coefficients, no_cys_extinction_coefficients = extinction_coefficients(row['Sequence'])
    df.at[index, 'Extinction coefficients (reduced cys)'] = no_cys_extinction_coefficients
    df.at[index, 'Extinction coefficients (cys)'] = cys_extinction_coefficients

# Save the output to a new Excel sheet
df[['Name', 'Sequence', 'GRAVY', 'Isoelectric point','Extinction coefficients (reduced cys)','Extinction coefficients (cys)','Instability Index']].to_excel('peptides - protparam_output_data2.xlsx', index=False)

